<?php

/*
1. Задайте массив textStorage в глобальной области видимости для хранения текстов:
   массив с числовыми индексами, каждый элемент которого будет также являться ассоциативным массивом
   вида с ключами title и text — для заголовка и текста соответственно. Например, заголовок для первого текста
   будет получить так: $textStorage[0][‘title’]
*/

$textStorage =[];

/*
2. Реализуйте функцию add для добавления нового текста в массив.
   Функция должна принимать на вход два текстовых параметра — title и text (заголовок и текст соответственно),
   и при этом ничего не возвращать. Функция должна иметь доступ к массиву с текстами — его также можно передать
   в качестве параметра. Помните про особенности передачи параметров по ссылке и значению.
*/

function add (&$textStorage,$title,$text){
    array_push($textStorage,['title'=> $title, 'text'=> $text]);
};

/*
3. Попробуйте вызвать функцию add два раза, передав ей необходимые параметры,
   после чего выведете содержимое массива textStorage любым удобным способом. Если вы все сделали правильно,
   то в нём будет два элемента, содержащих переданные заголовки и тексты.
*/

 add($textStorage,'first', 'первый' );
 add($textStorage,'second', 'второй' );
 print_r($textStorage);

/*
4. Реализуйте функцию remove для удаления конкретного текста из массива.
   На выходе функция должна принимать номер текста (соответствующий индексу в массиве) и массив с текстами,
   а возвращать true в случае, если такой номер (индекс) существует, и false, если такого номера (индекса)
   в массиве не оказалось.
*/

function remove (&$textStorage, $index) {
    if(array_key_exists($index, $textStorage) == true) {
        unset($textStorage[$index]);
        echo 'True' . PHP_EOL;
    } else {
        echo 'False' . PHP_EOL;
    }
};

/*
5. Вызовете функцию remove несколько раз, сначала с параметром 0, а затем с параметром 5,
   и выведете значение, которое она вернёт на экран.
*/

remove($textStorage, 0);
remove($textStorage, 5);

/*
6. Если до этого вы вызвали функцию add два раза, то у вас должно было быть два текста в массиве.
   После вызова remove с указанными параметрами должен остаться только второй текст. Чтобы убедиться в этом,
   выведете содержимое массива textStorage любым удобным способом.
*/

print_r($textStorage);

/*
7. Реализуйте функцию редактирования edit. Суть функции редактирования состоит в том,
   что мы должны иметь возможность обновить текст или заголовок выбранного элемента массива.
   То есть задать новое значение конкретному элементу. Таким образом, на входе функция должна принимать четыре параметра:
   первый — это номер (индекс) текста в массиве;
   второй — заголовок (title);
   третий — сам текст;
   четвёртый — это массив с текстами.
   Самостоятельно определите подходящие типы данных для всех параметров и укажите их при инициализации функции.
   Пусть функция возвращает true, если текст с нужным индексом существует, и false,
   если вдруг такого текста в массиве не оказалось.
*/

function edit (int $index, string $title, string $text, array &$textStorage)
{
    if(array_key_exists($index, $textStorage) == true) {
        $textStorage[$index] = ['title' => $title, 'text' => $text];
        echo 'True' . PHP_EOL;
    } else {
        echo 'False' . PHP_EOL;
    }
};


//8. Вызовите edit для первого текста и попробуйте обновить заголовок.
edit(1, 'NewSecond', 'второй',$textStorage );


//9. Выведите textStorage любым удобным способом и убедитесь, что данные сохранились.
print_r($textStorage);


//10. Попробуйте вызвать edit с заведомо несуществующим индексом и убедитесь, что функция возвращает false.
edit(2, 'NewSecond', '2второй',$textStorage );
